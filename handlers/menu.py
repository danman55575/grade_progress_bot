from aiogram import types, Dispatcher
from bot_manager import bot, admin
from keyboards import back
from aiogram.dispatcher import FSMContext
import psycopg2


async def main(message: types.Message, state: FSMContext):
    db = psycopg2.connect('postgres://sbfqqjimvvqzyc:05185c25d6ef587b7cb9f85541a9902030e39dabe606c765a6f77ea9da80c544'
                          '@ec2-54-74-14-109.eu-west-1.compute.amazonaws.com:5432/d4eaaaje408rv8')
    db.autocommit = True
    cursor = db.cursor()
    try:
        cursor.execute("SELECT user_id FROM my_users")
        all_users = cursor.fetchall()
        k = message.from_user.id
        name = message.from_user.full_name
        if (k,) in all_users:
            cursor.execute("UPDATE my_users SET amount_query = amount_query + 1 WHERE user_id = %s", (k,))
        else:
            cursor.execute("INSERT INTO my_users (user_id, amount_query, user_name) VALUES (%s, %s, %s)", (k, 1, name))
    except Exception as e:
        await bot.send_message(admin, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –≤ –º–æ–¥—É–ª–µ "menu.py", –≤–æ—Ç:\n{e}', disable_notification=True)
    finally:
        if db:
            db.close()
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    buttons = [types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å!', callback_data='begin'),
               types.InlineKeyboardButton(text='–ü–æ–º–æ—â—å', callback_data='help'),
               types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤üì¢', callback_data='review')]
    keyboard.add(*buttons)
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>, –∑–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ '
                         '–±–æ—Ç–∞ <i>GradeProgress Bot</i>.', reply_markup=keyboard)
    await state.finish()


async def help_list(call: types.CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    await call.message.answer('''–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é <b>GradeProgress Bot</b>:

1Ô∏è‚É£–ö–Ω–æ–ø–∫–∞ <b>–ù–∞—á–∞—Ç—å</b> - –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –æ–ø—Ä–æ—Å—É. –ü—Ä–æ—Ü–µ—Å—Å –æ–ø—Ä–æ—Å–∞:
  1-–π —ç—Ç–∞–ø. –í–≤–æ–¥ –∂–µ–ª–∞–µ–º–æ–≥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞;
  2-–π —ç—Ç–∞–ø. –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —Ä–∞—Å—á—ë—Ç–∞:

    1)"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–º–µ—Ç–æ–∫":
      3-–π —ç—Ç–∞–ø. –í–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–º–µ—Ç–æ–∫
      4-–π —ç—Ç–∞–ø. –í–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞

    2)"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å":
      3-–π —ç—Ç–∞–ø. –í–≤–æ–¥ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–º–µ—Ç–æ–∫

2Ô∏è‚É£–ö–Ω–æ–ø–∫–∞ <b>–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</b> - –æ—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞. –¢–∞–∫ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞ 

3Ô∏è‚É£–ö–Ω–æ–ø–∫–∞ <b>–ü–æ–º–æ—â—å</b> - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é <b>GradeProgress Bot</b>
''', reply_markup=back())


def register_handlers_menu(dp: Dispatcher):
    dp.register_message_handler(main, commands='start', state='*')
    dp.register_message_handler(main, text='–í –º–µ–Ω—é', state='*')
    dp.register_message_handler(help_list, commands='help')
    dp.register_callback_query_handler(help_list, text='help')
